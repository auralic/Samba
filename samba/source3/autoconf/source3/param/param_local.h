/* This file was automatically generated by generate_param.py. DO NOT EDIT */

#ifndef __PARAM_LOCAL_H__
#define __PARAM_LOCAL_H__

/**
 * This structure describes a single service.
 */
struct loadparm_service 
{
	bool   autoloaded;
	bool   access_based_share_enum;
	bool   acl_allow_execute_always;
	bool   acl_check_permissions;
	bool   acl_group_control;
	bool   acl_map_full_control;
	bool   administrative_share;
	const char **  admin_users;
	bool   afs_share;
	int   aio_read_size;
	char *  aio_write_behind;
	int   aio_write_size;
	int   allocation_roundup_size;
	bool   available;
	bool   blocking_locks;
	int   block_size;
	bool   browseable;
	int   case_sensitive;
	char *  comment;
	char *  copy;
	int   create_mask;
	int   csc_policy;
	char *  cups_options;
	int   default_case;
	bool   default_devmode;
	bool   delete_readonly;
	bool   delete_veto_files;
	int   dfree_cache_time;
	char *  dfree_command;
	int   directory_mask;
	int   directory_name_cache_size;
	bool   dmapi_support;
	char *  dont_descend;
	bool   dos_filemode;
	bool   dos_filetime_resolution;
	bool   dos_filetimes;
	bool   durable_handles;
	bool   ea_support;
	bool   fake_directory_create_times;
	bool   fake_oplocks;
	bool   follow_symlinks;
	int   force_create_mode;
	int   force_directory_mode;
	char *  force_group;
	bool   force_printername;
	bool   force_unknown_acl_user;
	char *  force_user;
	char *  fstype;
	bool   guest_ok;
	bool   guest_only;
	bool   hide_dot_files;
	char *  hide_files;
	bool   hide_special_files;
	bool   hide_unreadable;
	bool   hide_unwriteable_files;
	const char **  hosts_allow;
	const char **  hosts_deny;
	char *  include;
	bool   inherit_acls;
	int   inherit_owner;
	bool   inherit_permissions;
	const char **  invalid_users;
	bool   kernel_oplocks;
	bool   kernel_share_modes;
	bool   level2_oplocks;
	bool   locking;
	char *  lppause_command;
	char *  lpq_command;
	char *  lpresume_command;
	char *  lprm_command;
	char *  magic_output;
	char *  magic_script;
	int   mangled_names;
	char   mangling_char;
	bool   map_acl_inherit;
	bool   map_archive;
	bool   map_hidden;
	int   map_readonly;
	bool   map_system;
	int   max_connections;
	int   max_print_jobs;
	int   max_reported_print_jobs;
	int   min_print_space;
	char *  msdfs_proxy;
	bool   msdfs_root;
	bool   msdfs_shuffle_referrals;
	bool   nt_acl_support;
	const char **  ntvfs_handler;
	int   oplock_contention_limit;
	bool   oplocks;
	char *  path;
	bool   posix_locking;
	char *  postexec;
	char *  preexec;
	bool   preexec_close;
	bool   preserve_case;
	bool   printable;
	char *  print_command;
	char *  _printername;
	int   printing;
	char *  printjob_username;
	bool   print_notify_backchannel;
	bool   profile_acls;
	char *  queuepause_command;
	char *  queueresume_command;
	const char **  read_list;
	bool   read_only;
	char *  root_postexec;
	char *  root_preexec;
	bool   root_preexec_close;
	bool   short_preserve_case;
	int   smb_encrypt;
	bool   spotlight;
	bool   store_dos_attributes;
	bool   strict_allocate;
	int   strict_locking;
	bool   strict_rename;
	bool   strict_sync;
	bool   sync_always;
	bool   use_client_driver;
	bool   _use_sendfile;
	bool   valid;
	const char **  valid_users;
	char *  veto_files;
	char *  veto_oplock_files;
	const char **  vfs_objects;
	char *  volume;
	bool   wide_links;
	int   write_cache_size;
	const char **  write_list;
LOADPARM_EXTRA_LOCALS
};

#endif /* __PARAM_LOCAL_H__ */

