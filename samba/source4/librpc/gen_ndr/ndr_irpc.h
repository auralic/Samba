/* header auto-generated by pidl */

#include "librpc/ndr/libndr.h"
#include "bin/default/source4/librpc/gen_ndr/irpc.h"

#ifndef _HEADER_NDR_irpc
#define _HEADER_NDR_irpc

#define NDR_IRPC_UUID "e770c620-0b06-4b5e-8d87-a26e20f28340"
#define NDR_IRPC_VERSION 1.0
#define NDR_IRPC_NAME "irpc"
#define NDR_IRPC_HELPSTRING NULL
extern const struct ndr_interface_table ndr_table_irpc;
#define NDR_IRPC_UPTIME (0x00)

#define NDR_NBTD_INFORMATION (0x01)

#define NDR_NBTD_GETDCNAME (0x02)

#define NDR_NBTD_PROXY_WINS_CHALLENGE (0x03)

#define NDR_NBTD_PROXY_WINS_RELEASE_DEMAND (0x04)

#define NDR_KDC_CHECK_GENERIC_KERBEROS (0x05)

#define NDR_SMBSRV_INFORMATION (0x06)

#define NDR_SAMBA_TERMINATE (0x07)

#define NDR_DREPLSRV_REFRESH (0x08)

#define NDR_DREPL_TAKEFSMOROLE (0x09)

#define NDR_DREPL_TRIGGER_REPL_SECRET (0x0a)

#define NDR_DNSUPDATE_RODC (0x0b)

#define NDR_DNSSRV_RELOAD_DNS_ZONES (0x0c)

#define NDR_IRPC_CALL_COUNT (13)
void ndr_print_irpc_flags(struct ndr_print *ndr, const char *name, uint32_t r);
void ndr_print_irpc_creds(struct ndr_print *ndr, const char *name, const struct irpc_creds *r);
enum ndr_err_code ndr_push_irpc_header(struct ndr_push *ndr, int ndr_flags, const struct irpc_header *r);
enum ndr_err_code ndr_pull_irpc_header(struct ndr_pull *ndr, int ndr_flags, struct irpc_header *r);
void ndr_print_irpc_header(struct ndr_print *ndr, const char *name, const struct irpc_header *r);
enum ndr_err_code ndr_push_irpc_name_record(struct ndr_push *ndr, int ndr_flags, const struct irpc_name_record *r);
enum ndr_err_code ndr_pull_irpc_name_record(struct ndr_pull *ndr, int ndr_flags, struct irpc_name_record *r);
void ndr_print_irpc_name_record(struct ndr_print *ndr, const char *name, const struct irpc_name_record *r);
enum ndr_err_code ndr_push_irpc_name_records(struct ndr_push *ndr, int ndr_flags, const struct irpc_name_records *r);
enum ndr_err_code ndr_pull_irpc_name_records(struct ndr_pull *ndr, int ndr_flags, struct irpc_name_records *r);
void ndr_print_irpc_name_records(struct ndr_print *ndr, const char *name, const struct irpc_name_records *r);
void ndr_print_nbtd_info_level(struct ndr_print *ndr, const char *name, enum nbtd_info_level r);
void ndr_print_nbtd_statistics(struct ndr_print *ndr, const char *name, const struct nbtd_statistics *r);
void ndr_print_nbtd_info(struct ndr_print *ndr, const char *name, const union nbtd_info *r);
void ndr_print_nbtd_proxy_wins_addr(struct ndr_print *ndr, const char *name, const struct nbtd_proxy_wins_addr *r);
void ndr_print_smbsrv_info_level(struct ndr_print *ndr, const char *name, enum smbsrv_info_level r);
void ndr_print_smbsrv_session_info(struct ndr_print *ndr, const char *name, const struct smbsrv_session_info *r);
void ndr_print_smbsrv_sessions(struct ndr_print *ndr, const char *name, const struct smbsrv_sessions *r);
void ndr_print_smbsrv_tcon_info(struct ndr_print *ndr, const char *name, const struct smbsrv_tcon_info *r);
void ndr_print_smbsrv_tcons(struct ndr_print *ndr, const char *name, const struct smbsrv_tcons *r);
void ndr_print_smbsrv_info(struct ndr_print *ndr, const char *name, const union smbsrv_info *r);
void ndr_print_drepl_role_master(struct ndr_print *ndr, const char *name, enum drepl_role_master r);
void ndr_print_irpc_uptime(struct ndr_print *ndr, const char *name, int flags, const struct irpc_uptime *r);
void ndr_print_nbtd_information(struct ndr_print *ndr, const char *name, int flags, const struct nbtd_information *r);
void ndr_print_nbtd_getdcname(struct ndr_print *ndr, const char *name, int flags, const struct nbtd_getdcname *r);
void ndr_print_nbtd_proxy_wins_challenge(struct ndr_print *ndr, const char *name, int flags, const struct nbtd_proxy_wins_challenge *r);
void ndr_print_nbtd_proxy_wins_release_demand(struct ndr_print *ndr, const char *name, int flags, const struct nbtd_proxy_wins_release_demand *r);
void ndr_print_kdc_check_generic_kerberos(struct ndr_print *ndr, const char *name, int flags, const struct kdc_check_generic_kerberos *r);
void ndr_print_smbsrv_information(struct ndr_print *ndr, const char *name, int flags, const struct smbsrv_information *r);
void ndr_print_samba_terminate(struct ndr_print *ndr, const char *name, int flags, const struct samba_terminate *r);
void ndr_print_dreplsrv_refresh(struct ndr_print *ndr, const char *name, int flags, const struct dreplsrv_refresh *r);
void ndr_print_drepl_takeFSMORole(struct ndr_print *ndr, const char *name, int flags, const struct drepl_takeFSMORole *r);
void ndr_print_drepl_trigger_repl_secret(struct ndr_print *ndr, const char *name, int flags, const struct drepl_trigger_repl_secret *r);
void ndr_print_dnsupdate_RODC(struct ndr_print *ndr, const char *name, int flags, const struct dnsupdate_RODC *r);
void ndr_print_dnssrv_reload_dns_zones(struct ndr_print *ndr, const char *name, int flags, const struct dnssrv_reload_dns_zones *r);
#endif /* _HEADER_NDR_irpc */
